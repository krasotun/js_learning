// Реализуйте и экспортируйте по умолчанию функцию, которая возвращает подстроку из переданной строки.
// Подстрокой называется любая выбранная часть строки.
// Например для строки hello можно выделить следующие подстроки: ello, llo, o, el и множество других.
// Функция принимает на вход три параметра:
// - Строка.
// - Начальный индекс.Значение по умолчанию: 0.
// - Длина подстроки(количество символов).Значение по умолчанию: длина всей строки.
// + Если переданная длина отрицательная, то внутри она становится единицей
// + Если переданная длина равна нулю, то возвращается пустая строка
// +Если конечный индекс(начальный индекс + переданная длина - 1)
//  выходит за границу строки, то берётся подстрока от начального индекса до конца строки.
// + Если начальный индекс отрицательный, то внутри он становится нулем
// + Если начальный индекс выходит за границу слова справа, то всегда возвращается пустая строка
const substr = (string, start = 0, length = string.length) => {
	if (length < 0) {
		length = 1;
	}
	if (length === 0) {
		return ''
	}
	if ((start + length - 1) > string.length) {
		length = string.length;
	}
	if (start < 0) {
		start = 0
	}
	if (start > string.length) {
		return ''
	}
	const array = [];
	for (let i = start; i < start + length; i++) {
		array.push(string[i]);
	} return array.join('')
}
console.log(substr('abba', 1, 2));    // bb
console.log(substr('abba', 0, 1));    // a
console.log(substr('abba', -10, 2));  // ab
console.log(substr('abba', -1, 100)); // abba
console.log(substr('abba', -1, -1));  // a
console.log(substr('abba', 1, -10));  // b
console.log(substr('abba', 1, 10));   // bba
console.log(substr('abba', 1, 0));    // ''
console.log(substr('abba', 100, 3));  // ''
